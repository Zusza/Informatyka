# # Zad.1
# import random

# def scal(tab, lewy, srodek, prawy):
#     pom = [0] * (prawy - lewy + 1)  
#     i, j, k = lewy, srodek + 1, 0

#     while i <= srodek and j <= prawy:
#         if tab[i] < tab[j]:
#             pom[k] = tab[i]
#             i += 1
#         else:
#             pom[k] = tab[j]
#             j += 1
#         k += 1

#     while i <= srodek:
#         pom[k] = tab[i]
#         i += 1
#         k += 1

#     while j <= prawy:
#         pom[k] = tab[j]
#         j += 1
#         k += 1

#     for x in range(len(pom)):
#         tab[lewy + x] = pom[x]

# def sortuj(tab, lewy, prawy):
#     if lewy < prawy:
#         srodek = (prawy + lewy) // 2
#         sortuj(tab, lewy, srodek)
#         sortuj(tab, srodek + 1, prawy)
#         scal(tab, lewy, srodek, prawy)

# n = 1000001
# tab = [random.randint(1, 1000000) for i in range(n)]

# # Sortowanie
# sortuj(tab, 0, n - 1)

# # Zapisywanie do pliku
# with open("wyniki.txt", "w") as file:
#     for num in tab:
#         file.write(f"{num}\n")

# print("Sortowanie zakończone. Wyniki zapisano w 'wyniki.txt'.")

# # Zad.2
# wsp = list(map(int, input("Podaj ciąg liczb: ").split()))
# x = int(input("Podaj x: "))
# # print(wsp, x)
# n = len(wsp)
# stopien = n - 1
# w = wsp[n-1]
# for i in range(n-2,-1,-1):
#     w = w * x + wsp[i]
# print(w)

# # Zad.3
# ciag = list(map(int, input("Podaj ciąg: ").split())) #podawanie ciągów
# n = len(ciag)
# for i in range(1, n):
#     if ciag[i] > ciag[i-1]:
#         w = True
#     else:
#         w = False
# if w == True:
#     print("Tak")
# else:
#     print("Nie")

# # Zad.4
# plik = open("liczby.txt", "r")
# liczby = list(map(int, plik.readline().split()))
# plik.close()
# print(liczby)
# dl = 1
# dlmax = 1
# n = len(liczby)
# for i in range(1, n):
#     if liczby[i-1] <= liczby[i]:
#         dl += 1
#     else:
#         if dl>dlmax:
#             dlmax = dl
#         dl = 1
# if dl>dlmax:
#     dlmax=dl
# print(dlmax)

# # Zad.5
# plik = open("ciag.txt", "r")
# liczby = list(map(int, plik.readline().split()))
# plik.close()
# n = len(liczby)
# maxsum = float('-inf') #Ustawia najmniejszą możliwą wartość (nawet ujemną)

# for i in range(n - 2):
#     suma = liczby[i] + liczby[i + 1] +  liczby[i + 2]
#     maxsum = max(maxsum, suma)
# print("Maksymalna suma: ",maxsum)

# # Zad.6
# plik = open("ciag.txt", "r")
# liczby = list(map(int, plik.readline().split()))
# plik.close()

# maxsum = liczby[0] #lub float('-inf') - Ustawia najmniejszą możliwą wartość (nawet ujemną)
# sum = 0

# for i in liczby:
#     sum = max(i, sum + i)
#     maxsum = max(maxsum, sum)
# print(maxsum)

# # Zad.7
# with open("ciagi.txt", "r") as plik:
#     for linia in plik:  # Iterujemy przez każdy wiersz
#         liczby = list(map(int, linia.split()))
#         n = len(liczby)

#         for i in range(n - 2):
#             if liczby[i] + liczby[i + 1] + liczby[i + 2] == 10:
#                 print(f"Wiersz: {linia.strip()}, indeks: {i}")


# # Gr.A
# # Zad.1 - W pliku wielomian.txt w pierwszym wierszu znajduje się liczba całkowita oznaczająca stopień wielomianu n, w drugim wierszu znajduje się liczba całkowita oznaczająca argument x. 
# W trzecim wierszu znajdują się współczynniki wielomianu rozdzielone spacjami w kolejności od współczynnika przy najwyższej potędze do wyrazu wolnego. 
# Napisz program, który wyświetli wartość wielomianu stopnia n, dla argumentu x, o współczynnikach podanych w pliku wielomian.txt. 
# Wykorzystaj schemat Hornera, aby zminimalizować liczbę wykonywanych działań mnożenia.
# with open ("wielomian.txt", "r") as plik:
#     for i in plik:
#         a = int(plik.readline().strip())
#         x = int(plik.readline().strip())
#         wspolczynnik = list(map(int, i.split()))

# wartosc = wspolczynnik[0]
# for i in wspolczynnik:
#     w = w + x * i

# print(w)
# # Zad.2 - Napisz program w języku Python, który wczyta ciągi z pliku ciagi.txt i wyświetli te ciągi, które są rosnące. W pliku ciagi.txt każdy wiersz zawiera jeden ciąg liczb całkowitych rozdzielonych spacjami.
# with open("ciagi.txt", "r") as plik:
#     for i in plik:
#         ciag = list(map(int, i.split()))

# n = len(ciag)
# rosn = True
# for i in range(n - 1):
#     if ciag[i] < ciag[i-1]:
#         rosn = False
#         break
# if rosn == True:
#     print(ciag)

# # Zad.3 - Napisz program w języku Python, który wyświetli spójne podciągi o długości 4 ciągu, znajdującego się w pierwszym wierszu pliku liczby.txt, które mają sumę elementów większą od 1.
# plik = open("liczby.txt", "r")
# liczby = list(map(int, plik.readline().split()))
# plik.close()

# n = len(liczby)

# for i in range(n-3):
#     podciag = liczby[i:i+4] #od liczby[i] do liczby [i+4]
#     if sum(podciag) > 1:
#         print(podciag)
