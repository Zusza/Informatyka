# Zad.1 - Napisz program w języku Python, który wyświetli wszystkie liczby pierwsze mniejsze lub równe n,
# gdzie n jest liczbą naturalną większą od 1, wykorzystując algorytm sita Eratostenesa.
# n = int(input("Podaj n: "))
#
# czy_pierwsza = [True]*(n+1)
# czy_pierwsza[0] = False
# czy_pierwsza[1] = False
# p = 2
# while p*p <= n:
#     if czy_pierwsza[p] == True:
#         for i in range(p*p,n+1,p):
#             czy_pierwsza[i] = False
#     p += 1
# for i in range(2,n+1):
#     if czy_pierwsza[i]:
#         print(i, end=" ")

# Zad.2 - Napisz program w języku Python, który wyświetli liczbę oraz sumę liczb pierwszych mniejszych
# lub równych n, gdzie n jest liczbą naturalną większą od 1, wykorzystując algorytm sita Eratostenesa.
# n = int(input("Podaj n: "))
#
# czy_pierwsza = [True]*(n+1)
# czy_pierwsza[0] = False
# czy_pierwsza[1] = False
# ilosc = 0
# sum = 0
# p = 2
# while p*p <= n:
#     if czy_pierwsza[p] == True:
#         for i in range(p*p,n+1,p):
#             czy_pierwsza[i] = False
#     p += 1
# for i in range(2,n+1):
#     if czy_pierwsza[i]:
#         sum += i
#         ilosc += 1
#         # print(i, end=" ")
# print("Ilość:", ilosc, "Suma:", sum)

# Zad.3 - Zmodyfikuj pseudokod z przykładu 1 zamieniając pętlę dla, znajdującą się wewnątrz pętli dopóki,
# na pętlę dopóki.
# n = int(input("Podaj n: "))
#
# czy_pierwsza = [True]*(n+1)
# czy_pierwsza[0] = False
# czy_pierwsza[1] = False
# p = 2
# while p*p <= n:
#     if czy_pierwsza[p] == True:
#         i = p*p
#         while i <= n:
#             czy_pierwsza[i] = False
#             i += p
#     p += 1
# for i in range(2, n+1):
#     if czy_pierwsza[i]:
#         print(i, end=" ")

# Zad.4 - Napisz program w języku Python, który wyznaczy wszystkie liczby pierwsze mniejsze lub równe 1000
# metodą sita Eratostenesa, a następnie wyświetli informację ile liczb w pliku liczby.txt jest liczbą pierwszą.
# Plik liczby.txt zawiera 10000 liczb z zakresu od 1 do 1000.
def sito_eratostenesa(limit):
    czy_pierwsza = [True] * (limit + 1)
    czy_pierwsza[0] = False  # 0 nie jest liczbą pierwszą
    czy_pierwsza[1] = False  # 1 nie jest liczbą pierwszą
    
    p = 2
    while p * p <= limit:
        if czy_pierwsza[p]:
            for i in range(p * p, limit + 1, p):
                czy_pierwsza[i] = False
        p += 1
    return czy_pierwsza

if __name__ == '__main__':
    limit = 1000
    
    czy_pierwsza = sito_eratostenesa(limit)

    with open("liczby.txt", "r") as plik:
        liczby = list(map(int, plik.read().split()))

    liczba_pierwszych = 0
    for liczba in liczby:
        if liczba <= limit and czy_pierwsza[liczba]:
            liczba_pierwszych += 1
    print(f"Liczba liczb pierwszych w pliku: {liczba_pierwszych}")


# Zad.5 - Napisz program w języku Python, który zapyta użytkownika o podanie dwóch liczb całkowitych a, b, gdzie
# 2 < a < b, a następnie wyświetli wszystkie liczby pierwsze z przedziału [a,b] oraz ich liczbę i sumę,
# wykorzystując algorytm sita Eratostenesa.
def sito_eratostenesa(limit):
    czy_pierwsza = [True] * (limit + 1)
    czy_pierwsza[0] = False  # 0 nie jest liczbą pierwszą
    czy_pierwsza[1] = False  # 1 nie jest liczbą pierwszą
    
    p = 2
    while p * p <= limit:
        if czy_pierwsza[p]:
            for i in range(p * p, limit + 1, p):
                czy_pierwsza[i] = False
        p += 1
    return czy_pierwsza

if __name__ == '__main__':
    a = int(input("Podaj wartość a (2 < a): "))
    b = int(input("Podaj wartość b (a < b): "))

    if a <= 2 or a >= b:
        print("Podane wartości są nieprawidłowe. Upewnij się, że 2 < a < b.")
    else:
        czy_pierwsza = sito_eratostenesa(b)

        liczby_pierwsze = [i for i in range(a, b + 1) if czy_pierwsza[i]]

        print(f"Liczby pierwsze z przedziału [{a}, {b}]: {liczby_pierwsze}")
        print(f"Ilość liczb pierwszych: {len(liczby_pierwsze)}")
        print(f"Suma liczb pierwszych: {sum(liczby_pierwsze)}")


# Zad.6 - Napisz program w języku Python, który wyznaczy wszystkie liczby pierwsze mniejsze lub równe 1000 metodą sita
# Eratostenesa. Następnie program wczyta z pliku ciag.txt liczby całkowite z przedziału [1, 1000]. Liczby te są zapisane
# w jednej linii i są rozdzielone spacjami. Następnie wyświetl ile jest liczb pierwszych w pliku ciag.txt jest oraz jaki
# stanowią procent wszystkich liczb.
def sito_eratostenesa(limit):
    czy_pierwsza = [True] * (limit + 1)
    czy_pierwsza[0] = False  # 0 nie jest liczbą pierwszą
    czy_pierwsza[1] = False  # 1 nie jest liczbą pierwszą

    p = 2
    while p * p <= limit:
        if czy_pierwsza[p]:
            for i in range(p * p, limit + 1, p):
                czy_pierwsza[i] = False
        p += 1
    return [i for i in range(2, limit + 1) if czy_pierwsza[i]]

if __name__ == '__main__':
    liczby_pierwsze = sito_eratostenesa(1000)

    with open("ciag.txt", "r") as plik:
        zawartosc = plik.read()

    liczby_z_pliku = list(map(int, zawartosc.split()))

    liczby_pierwsze_w_pliku = [liczba for liczba in liczby_z_pliku if liczba in liczby_pierwsze]

    liczba_pierwszych = len(liczby_pierwsze_w_pliku)
    liczba_liczb_w_pliku = len(liczby_z_pliku)
    
    if liczba_liczb_w_pliku > 0:
        procent_pierwszych = (liczba_pierwszych / liczba_liczb_w_pliku) * 100
    else:
        procent_pierwszych = 0

    print(f"Liczby pierwsze w pliku: {liczby_pierwsze_w_pliku}")
    print(f"Ilość liczb pierwszych w pliku: {liczba_pierwszych}")
    print(f"Procent liczb pierwszych w pliku: {procent_pierwszych:.2f}%")

